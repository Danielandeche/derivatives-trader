name: PR Preview Deployment
on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build_and_deploy_preview:
    name: Build and Deploy PR Preview
    runs-on: ubuntu-latest
    environment: Staging
    permissions:
      contents: read
      actions: write
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

    - name: Setup Node
      uses: "./.github/actions/setup_node"

    - name: Install Dependencies
      uses: "./.github/actions/npm_install_from_cache"

    - name: Build
      uses: "./.github/actions/build"
      with:
        NODE_ENV: staging
        RUDDERSTACK_KEY: ${{ secrets.RUDDERSTACK_KEY }}
        REF_NAME: ${{ github.head_ref }}
        R2_PROJECT_NAME: ${{ vars.R2_PROJECT_NAME }}
        CROWDIN_BRANCH_NAME: ${{ vars.CROWDIN_BRANCH_NAME }}
        REMOTE_CONFIG_URL: ${{ vars.REMOTE_CONFIG_URL }}
        TRACKJS_TOKEN: ${{ secrets.TRACKJS_TOKEN }}

    - name: Deploy Preview
      id: deploy
      uses: "./.github/actions/publish_to_pages_preview"
      with:
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        BRANCH_NAME: ${{ github.head_ref }}

    - name: Comment PR with Preview Link
      uses: actions/github-script@v7
      with:
        script: |
          const previewUrl = '${{ steps.deploy.outputs.preview_url }}';
          const prNumber = context.issue.number;
          const branchName = '${{ github.head_ref }}';
          
          // Check if we already have a comment with preview link
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('ðŸš€ Preview deployed')
          );
          
          const commentBody = `ðŸš€ **Preview deployed for branch \`${branchName}\`**

---
*Deployed from commit: ${context.payload.pull_request.head.sha.substring(0, 7)}*`;

          if (botComment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: commentBody
            });
          } else {
            // Create new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: commentBody
            });
          }

    - name: Update PR Status
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const state = '${{ job.status }}' === 'success' ? 'success' : 'failure';
          const description = state === 'success' 
            ? 'Preview deployment completed successfully'
            : 'Preview deployment failed';
          
          await github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.payload.pull_request.head.sha,
            state: state,
            description: description,
            context: 'preview-deployment'
          });